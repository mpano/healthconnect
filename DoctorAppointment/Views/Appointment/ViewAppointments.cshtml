@model PaginatedList<Appointment>
@{
    ViewData["Title"] = "ViewAppointments";
    if (ViewBag.Role == "Admin")
    {
        Layout = "~/Views/Shared/_Layoutdd.cshtml";

    }
    else
    {
        Layout = "~/Views/Shared/Medicr_DoctorLayout.cshtml";
    }
}
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>

<h1>Appointments</h1>
@if (User.IsInRole("Doctor"))
{
    <p>Showing appointments for the currently logged-in doctor.</p>
}

@if (Model.Count == 0)
{
    <p>No appointments found.</p>
}
else
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Date</th>
                <th>Day</th>
                <th>Patient Name</th>
                <th>Patient Email</th>
                <th>Doctor Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var appointment in Model)
            {
                <tr id="appointment-@appointment.AppointmentID">
                    <td>@appointment.AppointmentDate</td>
                    <td>@appointment.AppointmentDay</td>
                    <td>@appointment.PatientName &nbsp;  @appointment.PatientName2</td>
                    <td>@appointment.PatientEmail</td>
                    <td>@appointment.DoctorName &nbsp; @appointment.DoctorName2</td>
                    <td>
                        @if (appointment.Approved)
                        {
                            <span>Approved</span>
                        }
                        else
                        {
                            <a href="#" onclick="approveAppointment(@appointment.AppointmentID, this)" data-patient-name="@appointment.PatientName">Approve Appointment</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Hidden modal dialog -->
    <div class="modal fade" id="approvalModal" tabindex="-1" role="dialog" aria-labelledby="approvalModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="approvalModalLabel">Appointment Approved</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Appointment Approved for patient: <span id="patientName"></span></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("ViewAppointments", new { page = Model.PageIndex - 1 })">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (i == Model.PageIndex + 1)
                {
                    <li class="page-item active">
                        <span class="page-link">@i<span class="sr-only">(current)</span></span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("ViewAppointments", new { page = i - 1 })">@i</a>
                    </li>
                }
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a asp-action="ViewAppointments" asp-route-pageNumber="@(Model.PageIndex + 1)">Next</a>
                    @*<a class="page-link" href="@Url.Action("ViewAppointments", new { page = Model.PageIndex + 1 })">Next</a>*@
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">Next</a>
                </li>
            }
        </ul>
    </nav>

}

<script>
    function approveAppointment(appointmentId, element) {
        // Make an AJAX request to update the appointment status
        // You can use libraries like jQuery or Axios to simplify the AJAX request

        // Example using jQuery AJAX
        $.ajax({
            url: "/Appointment/Approved",
            type: "POST",
            data: { id: appointmentId },
            success: function () {
                // Update the link text
                element.textContent = "Approved";

                // Disable the link
                element.setAttribute("disabled", "disabled");

                // Display the modal dialog
                var patientName = element.getAttribute("data-patient-name");
                document.getElementById("patientName").textContent = patientName;
                $("#approvalModal").modal("show");
            },
            error: function (xhr, status, error) {
                // Handle the error if necessary
                console.error(error);
            }
        });
    }
</script>







